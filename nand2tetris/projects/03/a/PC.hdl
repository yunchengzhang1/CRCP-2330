// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl
// reference: http://nand2tetris-questions-and-answers-forum.32033.n3.nabble.com/PC-Hdl-td4026543.html
/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

 //jump to next location to memory/ jump to designated address/ output to data buses
 // reset: fetch the first instruction PC = 0
 // next: fetch the next instruction PC++
 // goto: fetch instruction n PC = n

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // register output ++
    Inc16(in = regOut, out = incOut);
    Mux16(a = regOut,  b = incOut, sel = inc,  out = incIf);
    Mux16(a = incIf,  b = in,      sel = load, out = loadIf);
    Mux16(a = loadIf, b = false,   sel = reset,out = resetIf);
    //loop output from register
    Register(in = resetIf, load = true, out = out, out = regOut);

}
