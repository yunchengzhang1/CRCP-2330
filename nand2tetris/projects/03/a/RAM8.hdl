// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    // demux 8 way
    DMux8Way(in = load, sel = address, a = 00, b = 01, c = 02, d = 03, e = 04, f = 05, g = 06, h = 07);
    // 8 registers to match r0 - r7
    Register(in = in , load = 00 , out = r0);
    Register(in = in , load = 01 , out = r1);
    Register(in = in , load = 02 , out = r2);
    Register(in = in , load = 03 , out = r3);
    Register(in = in , load = 04 , out = r4);
    Register(in = in , load = 05 , out = r5);
    Register(in = in , load = 06 , out = r6);
    Register(in = in , load = 07 , out = r7);
    //Mux 8 way output based on sel[3]
    Mux8Way16(a = r0, b = r1, c = r2, d = r3, e = r4, f = r5, g = r6, h = r7, sel = address, out = out);
}