// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */
 // 64 * 8

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    //dmux 8 way with address 0 to 2
    DMux8Way(in = load, sel = address[0..2], a = aa, b = bb, c = cc, d = dd, e = ee, f = ff, g = gg, h = hh);
    //RAM8 8 times with address 3 to 9 (6 digits for RAM64)
    RAM64(in = in, load = aa, address = address[3..9], out = r0);
    RAM64(in = in, load = bb, address = address[3..9], out = r1);
    RAM64(in = in, load = cc, address = address[3..9], out = r2);
    RAM64(in = in, load = dd, address = address[3..9], out = r3);
    RAM64(in = in, load = ee, address = address[3..9], out = r4);
    RAM64(in = in, load = ff, address = address[3..9], out = r5);
    RAM64(in = in, load = gg, address = address[3..9], out = r6);
    RAM64(in = in, load = hh, address = address[3..9], out = r7);
    //mux 8 way 16
    Mux8Way16(a = r0, b = r1, c = r2, d = r3, e = r4, f = r5, g = r6, h = r7, sel = address[0..2], out = out);
}